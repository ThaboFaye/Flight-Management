<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>